plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

import org.apache.tools.ant.taskdefs.condition.Os
import java.util.Properties

def flutterDotenvProperties = new Properties()
def flutterDotenvFile = rootProject.file("../.env")

// Load .env file if it exists
if (flutterDotenvFile.exists()) {
    flutterDotenvProperties.load(new FileInputStream(flutterDotenvFile))
    println("Loaded .env file successfully")
} else {
    println("Warning: .env file not found")
}

// Check and fallback for missing GOOGLE_MAPS_API_KEY
def googleMapsApiKey = flutterDotenvProperties.getProperty('GOOGLE_MAPS_API_KEY')
if (googleMapsApiKey == null || googleMapsApiKey.isEmpty()) {
    println("Warning: GOOGLE_MAPS_API_KEY is missing. Using a fallback value.")
    googleMapsApiKey = ""
}

android {
    namespace = "com.example.frontend"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.frontend"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // Add manifest placeholders to inject the API key
        manifestPlaceholders = [
            GOOGLE_MAPS_API_KEY: flutterDotenvProperties.getProperty('GOOGLE_MAPS_API_KEY', 'fallback-key'),
            applicationName    : "io.flutter.app.FlutterApplication"
        ]
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
